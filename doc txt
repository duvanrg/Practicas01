/* internal class Program
{
    private static void Main(string[] args)
    {
        int edad;
        float precio = 23;

        try{
            Console.WriteLine("Ingrese su edad: ");
            edad = int.Parse(s: Console.ReadLine());
            Console.WriteLine("Ingrese el precio: ");
            precio = float.Parse(Console.ReadLine());
        }catch (Exception ex){
            Console.WriteLine("Error {0}", ex.Message.ToString());
        }

        // if simple
        if (4 > 5)
        {

        }
        // if else
        if (4 > 5)
        {

        }
        else
        {

        }
        //if ... else if ... else
        if (4 > 5)
        {

        }
        else if (6 < 5)
        {

        }
        else
        {

        }

        for (var i = 0; i < 10; i++)
        {
                
        }

        while (true){

        }

        do
        {

        } while (true);

        switch
        int valor = 1;
        switch (valor)
        {
            case 0:
                break;
            default:
                break;
        } 

        // operadores
        // logicos: and(&& &) or(|| |) not(!)
        // Matematicos: + - * / % 
        // Comparacion: < > != <= >= ==
        // Asignacion: =
    }
} */
        // ############################################################
        // ############################################################
        // ############################################################
        // ############################################################
        // ############################################################
        // ############################################################
        // ############################################################
        // ############################################################
        // ############################################################
        // ############################################################

/* internal class Program
{
    private static void Main(string[] args)
    {
        var a = 12.3;
        double b = 12.3;
        Console.Clear();
        Console.WriteLine($"El valor de a es = {a} ");
        Console.WriteLine($"El valor de b es = {b} ");

        double d = 3D;
        d = 4d;
        d = 3.934_001;
        Console.WriteLine($"{d}");
        float f = 3_000.5F;
        f = 5.4F;
        Console.WriteLine($"{f}");
        decimal myMoney = 3_000.5m;
        myMoney = 400.75M;
        Console.WriteLine($"{myMoney}"); 
        
        

        bool check = true;
        Console.WriteLine(check ? "Activo" : "Inactivo");
        Console.WriteLine(false ? "Activo" : "Inactivo");

        decimal value = 123.456m;
        Console.WriteLine(value.ToString("C2"));


        
    }
} */

// ############################################################
// ############################################################
// ############################################################
// ############################################################
// ############################################################
// ############################################################
// ############################################################
// ############################################################
// ############################################################

/* 
using System.Collections;

internal class Program
{

    private static void Main(string[] args)
    {
        ArrayList myAL = new ArrayList();
        myAL.Add("The");
        myAL.Add("quick");
        myAL.Add("brown");
        myAL.Add("fox");
        foreach (Object n in myAL)
        {
            Console.WriteLine(n.ToString());

        }

        ArrayList Carnivoros = new ArrayList();
        ArrayList Acuaticos = new ArrayList();
        ArrayList Animales = new ArrayList();
        Carnivoros.Add("Tigre");
        Carnivoros.Add("Leon");
        Carnivoros.Add("Pantera");
        Carnivoros.Add("Leopardo");
        Acuaticos.Add("Tiburon");
        Acuaticos.Add("Delfin");
        Acuaticos.Add("Ballena");
        Acuaticos.Add("Pulpo");
        Animales.AddRange(Carnivoros);
        foreach (Object n in Animales)
        {
            Console.WriteLine(n.ToString());
        }
        Console.WriteLine("Presiona Enter para continuar");
        Console.ReadLine();
        Console.WriteLine("===================================");

        Console.Clear();
        Animales.AddRange(Acuaticos);
        foreach (Object n in Animales)
        {
            Console.WriteLine(n.ToString());
        }

        string? palabra;
        int idx;
        ArrayList Materias = new ArrayList();
        ArrayList Cursos = new ArrayList();

        Materias.Add("Calculo");
        Materias.Add("Español");
        Materias.Add("Dibujo Tecnico");
        Materias.Add("Ingles");

        Cursos.Add("Octavo");
        Cursos.Add("Noveno");

        Console.Write("Escriba una materia a buscar: ");
        palabra = Console.ReadLine();
        Console.WriteLine(Materias.Contains(palabra) ? "La materia esta disponible" : "La materia no se encontro");
        Console.WriteLine(Materias.IndexOf(palabra));

        idx = Materias.LastIndexOf(palabra);
        Console.WriteLine($"La asignatura {palabra} se encontro en la ultima posicion {idx}");


        do
        {
            Console.Write("Ingrese la posicion donde desea insertar la Asignatura: ");
            idx = Convert.ToInt32(Console.ReadLine()); 
        } while (idx > Materias.Count);
        Materias.InsertRange(idx, Cursos);

        Console.Write("Excribe una materia para insertar: ");
        palabra = Console.ReadLine();
        Materias.Insert(idx, palabra);

        foreach (Object n in Materias)
        {
            Console.WriteLine(n.ToString());
        }


        ArrayList miArrayList = new ArrayList();
        miArrayList.Add("Manzana");
        miArrayList.Add("Banana");
        miArrayList.Add("Naranja");

        for (var i = 0; i < 10; i++)
        {
            miArrayList.Add(i);
        }
        miArrayList.RemoveAt(1);

        String[] myArray = (String[])miArrayList.ToArray(typeof(string));

        foreach (Object n in myArray)
        {
            Console.WriteLine(n);
        }

        foreach (Object n in miArrayList)
        {
            Console.WriteLine(n.ToString());
        }


        ArrayList Materias =  new ArrayList();
        String[] especialidad =  {"Sistemas", "Mecatronica", "Industrial", "Gestion Empresarial", "Energiar Renovables", "Tecnologias de la Informacion"};

        foreach (Object dato in  Materias)
        {
            if(dato.GetType() == typeof(System.String[])){
                foreach (String dato2 in (String[]) dato)
                {
                    Console.WriteLine(dato2);
                    
                }
            }
        }

        String ? palabra = null;
        // ############################################################
        // ############################################################
        // ############################################################

        List<String> Dinosaurios = new List<String>();
        string[] Dinos = {
            "Branchiosaurus",
            "Amargasaurus",
            "Mamenchisaurus"
        };
        Dinosaurios.AddRange(Dinos);
        Console.WriteLine("Ingrese el nombre del Dinosaurio a buscar: ");
        palabra = Console.ReadLine();
        
        string ? nombre = Dinosaurios.Find(n => n.StartsWith(palabra ?? String.Empty));
        Console.WriteLine(nombre != null ? "Se encontro el dinosaurio" : "no se encontro el Dinosaurio");
    }
} */

// ############################################################
// ############################################################
// ############################################################
// ############################################################
// ############################################################
// ############################################################

/* 
 private static void Main(string[] args)
    {
        Console.Clear();
        int idx;
        List<String> Materias = new List<String>();
        Materias.Add("Calculo");
        Materias.Add("Español");
        Materias.Add("Dibujo Tecnico");
        Materias.Add("Ingles");
        ContarLista(Materias);
        // ############################################################
        Console.WriteLine("Ingrese la posicion: ");
        idx = Convert.ToInt32(Console.ReadLine());
        Console.WriteLine($"El elemento en el indice {idx} es:  {ObtenerElemento(idx, Materias)}");
        // ############################################################
        Materias.Add(AddItemData());
        // ############################################################
        Console.WriteLine("Ingrese la palabra a buscar: ");
        if (ValidarItem(Materias, Console.ReadLine())){
            Console.WriteLine("Elemento encontrado");
        }else{
            Console.WriteLine("Elemento no encontrado");
        }
        // ############################################################
        Console.ReadKey();
    }

    public static String AddItemData()
    {
        Console.WriteLine("Ingrese el titulo del elemento: ");
        return Console.ReadLine();        
    }

    public static void ContarLista(List<String> lista)
    {
        Console.WriteLine($"Total de elementos de la lista {lista.Count()}");
    }

    /// <summary>
    /// Metodo para obtener el elemento de una posicion de una lista generica
    /// </summary>
    /// <param name="idx">Indice de la posicion a obtener</param>
    /// <param name="lista">Coleccion generica de los datos</param>
    /// <returns></returns>
    public static String ObtenerElemento(int idx, List<String> lista)
    {
        return lista[idx];
    }

    public static bool ValidarItem(List<String> lista, string valor){
        return lista.Exists(l => l.Equals(valor));
    }
 */

        // ############################################################
        // ############################################################
        // ############################################################
        // ############################################################
